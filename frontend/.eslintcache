[{"/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/index.js":"1","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/reportWebVitals.js":"2","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/App.js":"3","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Navbar/Navbar.js":"4","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Login/Login.js":"5","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Register/Register.js":"6","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Home/Home.js":"7","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/CreatePost/CreatePost.js":"8","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/reducer/reducer.js":"9","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Profile/Profile.js":"10","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/OthersProfile/OthersProfile.js":"11","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/FollowingPosts/FollowingPosts.js":"12"},{"size":500,"mtime":1607189752123,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607189752125,"results":"15","hashOfConfig":"14"},{"size":1908,"mtime":1619397137556,"results":"16","hashOfConfig":"14"},{"size":1287,"mtime":1619397192940,"results":"17","hashOfConfig":"14"},{"size":1579,"mtime":1619394269586,"results":"18","hashOfConfig":"14"},{"size":3836,"mtime":1619396700758,"results":"19","hashOfConfig":"14"},{"size":5706,"mtime":1619410509659,"results":"20","hashOfConfig":"14"},{"size":2854,"mtime":1617680174275,"results":"21","hashOfConfig":"14"},{"size":547,"mtime":1619394195527,"results":"22","hashOfConfig":"14"},{"size":3038,"mtime":1619410154472,"results":"23","hashOfConfig":"14"},{"size":4139,"mtime":1619410021687,"results":"24","hashOfConfig":"14"},{"size":5614,"mtime":1619410518188,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1aqmlih",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/index.js",[],["59","60"],"/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/reportWebVitals.js",[],"/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/App.js",["61"],"import React, { createContext, useContext, useReducer, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport './App.css';\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Home from \"./components/Home/Home\";\nimport CreatePost from \"./components/CreatePost/CreatePost\";\nimport Profile from \"./components/Profile/Profile\";\nimport OthersProfile from \"./components/OthersProfile/OthersProfile\";\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { initialState, reducer } from \"./reducer/reducer\";\nimport FollowingPosts from \"./components/FollowingPosts/FollowingPosts\";\n\nexport const UserContext = createContext();\n\nfunction Routing() {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if(user) {\n      dispatch({ type: \"USER\", payload: user })\n    } else {\n      history.push(\"/login\")\n    }\n  }, [dispatch, history])\n\n  return (\n    <div>\n      <Route path=\"/login\">\n        <Login />\n      </Route>\n      <Route path=\"/register\">\n        <Register />\n      </Route>\n      <Route path=\"/createpost\">\n        <CreatePost />\n      </Route>\n      <Route path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/otherprofile/:userid\">\n        <OthersProfile />\n      </Route>\n      <Route exact path=\"/followingposts\">\n        <FollowingPosts />\n      </Route>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n    </div>\n  )\n}\n\nfunction App() {\n  const [ state, dispatch ] = useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n          <Navbar />\n          <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Navbar/Navbar.js",[],"/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Login/Login.js",["62","63"],"import React, { useState, useContext }  from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\";\nimport { UserContext } from \"../../App\";\n\nfunction Login() {\n    const { state, dispatch } = useContext(UserContext);\n\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    const postData = () => {\n        fetch(\"/signin\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n        .then(res => res.json())\n        .then(data => {\n                console.log(data)\n                localStorage.setItem(\"user\", JSON.stringify(data.user));\n                localStorage.setItem(\"jwt\", data.token);\n                history.push(\"/\")\n                dispatch({ type: \"USER\", payload: data.user })\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            <div class=\"card auth_card\">\n                <h2>Login Here!</h2>\n                <span>Email</span>\n                <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                <span>Password</span>\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n                <a onClick={() => postData()} class=\"waves-effect waves-light btn\" type=\"submit\">Sign In</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;\n","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Register/Register.js",["64","65","66"],"import React, { useState, useEffect } from 'react'\n// import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport M from 'materialize-css';\n\nfunction Register() {\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [url, setURL] = useState(undefined);\n \n    useEffect(() => {\n        if (url) {\n            uploadFields()\n        }\n    }, [url])\n \n    const uploadPic = () => {\n        const data = new FormData();\n        data.append(\"file\", image);\n        data.append(\"upload_preset\", \"socio_circle\");\n        data.append(\"cloud_name\", \"danial92\");\n        fetch(\"https://api.cloudinary.com/v1_1/danial92/image/upload\", {\n            method: \"post\",\n            body: data\n        })\n            .then(res => res.json())\n            .then(data => {\n                setURL(data.url);\n                // console.log(data);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n \n    const uploadFields = () => {\n        // Remember! Below in the code, I have added '!' at the start of the regex code(present insdie the small brackets () )\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            M.toast({ html: \"Invalid Email!\", classes: \"#f44336 red\" });\n            return\n        }\n        fetch(\"/signup\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name,\n                password,\n                email,\n                pic: url\n            })\n        }).then(res => res.json())\n            .then(data => {\n                if (data.error) {\n                    M.toast({ html: data.error, classes: \"#f44336 red\" })\n                } else {\n                    M.toast({ html: data.message, classes: \"#00e676 green accent-3\" })\n                    history.push(\"/login\");\n                }\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n \n    const PostData = () => {\n        if(image) {\n            uploadPic();\n        } else {\n            uploadFields();\n        }\n    }\n\n    return (\n        <div>\n            <div class=\"card auth_card\">\n                <h2>Sign Up Here!</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <div class=\"file-field input-field\">\n                    <div class=\"btn\">\n                        <span>Upload Image</span>\n                        <input type=\"file\"\n                            onChange={(e) => setImage(e.target.files[0])}\n                        />\n                    </div>\n                    <div class=\"file-path-wrapper\">\n                        <input class=\"file-path validate\" type=\"text\" />\n                    </div>\n                </div>\n                <a onClick={() => PostData()} href class=\"waves-effect waves-light btn\" type=\"submit\">Sign Up</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Register;","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Home/Home.js",["67","68","69","70","71"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\nimport { UserContext } from \"../../App\";\n\n\nfunction Home() {\n    const { state, dispatch } = useContext(UserContext);\n    const [data, setData] = useState([]);\n    console.log(data);\n\n    useEffect(() => {\n        fetch(\"/allposts\", {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setData(data.posts);\n        })\n        .catch(err => console.log(err));\n    }, [])\n\n    const likePost = (id) => {\n        fetch(\"/like\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                console.log(result)\n                const newData = data.map(item => {\n                    if (item._id == result._id) {\n                        return result;\n                    } else {\n                        return item;\n                    }\n                })\n                setData(newData);\n            })\n            .catch(err => console.log(err));\n    }\n \n    const unlikePost = (id) => {\n        fetch(\"/unlike\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                console.log(result)\n                const newData = data.map(item => {\n                    if (item._id == result._id) { \n                        return result\n                    } else {\n                        return item;\n                    }\n                })\n                setData(newData);\n            })\n            .catch(err => console.log(err));\n    }\n \n    const commentPost = (text, postId) => {\n        fetch(\"/comment\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                text,\n                postId\n            })\n        }).then(res => res.json())\n            .then(result => {\n                //   console.log(result)\n                const newData = data.map(item => {\n                    if (item._id === result._id) {\n                        return result;\n                    } else {\n                        return item;\n                    }\n                })\n                setData(newData);\n                console.log(result)\n            })\n            .catch(err => console.log(err));\n    }\n \n    const deletePost = (postId) => {\n        fetch(`/deletepost/${postId}`, {\n            method: \"delete\",\n            headers: {\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res => res.json())\n            .then(result => {\n                const newData = data.filter(item => {\n                    return item._id !== result._id \n                })\n                setData(newData);\n            })\n    }\n\n\n    return (\n        <div className=\"cards_div\">\n           {\n               data.map(post => {\n                   return (\n                    <div className=\"card post_card\" key={post._id}>\n                        <h3><Link to={post.postedBy._id != state._id ? `/otherprofile/${post.postedBy._id}` : \"/profile\"}>{post.postedBy.name}</Link></h3>\n                        <img src={post.pic} alt=\"\" />\n                        <div className=\"like_div\">\n                            {\n                                post.likes.includes(state._id) ? <i class=\"material-icons\" style={{ cursor: \"pointer\", marginTop: '10px' }} onClick={() => { unlikePost(post._id) }}>thumb_down</i>\n                                    : <i class=\"material-icons\" style={{ cursor: \"pointer\", marginTop: '10px' }} onClick={() => { likePost(post._id) }}>thumb_up</i>\n                            }\n                        </div>\n                        <p>{post.likes.length} Likes</p>\n                        <p style={{ margin: '0px', fontSize: 'medium' }}><strong>{post.title}</strong> {post.body}</p>\n                        <div className=\"comment_div\">\n                            {\n                                post.comments.map(record => {\n                                    return (\n                                            <>\n                                                {\n                                                    <p><strong>{record.postedBy.name}</strong> {record.text}</p>\n                                                }\n                                            </>\n                                    )\n                                })\n                            }\n                        </div> \n\n                        <form onSubmit={(e) => {\n                            e.preventDefault()\n                            commentPost(e.target[0].value, post._id)\n                        }}>\n                            <input type=\"text\" placeholder=\"Add a comment...\" />\n                        </form>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Home;\n","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/CreatePost/CreatePost.js",["72"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport \"./CreatePost.css\";\n\nfunction CreatePost() {\n    const history = useHistory();\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [URL, setURL] = useState(\"\");\n\n    useEffect(() => {\n        if (URL) {\n            fetch(\"/createpost\", {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n                },\n                body: JSON.stringify({\n                    title,\n                    body,\n                    picURL: URL\n                })\n            })\n            .then(res => res.json())\n            .then(data => {\n                // if (!data.error) {\n                //     console.log(data.message)\n                // } else {\n                //     console.log(data.error)\n                //     }\n                console.log(data);\n                setURL(data.url);\n                history.push(\"/\")\n                })\n                .catch(err => console.log(err));\n        }\n    }, [URL])\n\n    const postDetails = () => {\n        const data = new FormData();\n        data.append(\"file\", image); // appending image\n        data.append(\"upload_preset\", \"socio_circle\"); // appending upload_preset\n        data.append(\"cloud_name\", \"danial92\"); // appending cloud account username\n        fetch(\"https://api.cloudinary.com/v1_1/danial92/image/upload\", {\n            method: \"post\",\n            body: data\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data);\n            setURL(data.url)\n        })\n        .catch(err => console.log(err));\n    }\n\n\n    return (\n        <div class=\"card create_card\">\n            <h2>Create Your Post!</h2>\n            <span>Title</span>\n            <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n            <span>Body</span>\n            <input type=\"text\" value={body} onChange={(e) => setBody(e.target.value)} />\n            <div class=\"file-field input-field\">\n                <div class=\"btn\">\n                    <span>Upload</span>\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n                </div>\n                <div class=\"file-path-wrapper picInput\">\n                    <input class=\"file-path validate\" type=\"text\" placeholder=\"Upload your image..!!!\" />\n                </div>\n                </div>\n                    <a onClick={() => postDetails()} class=\"waves-effect waves-light btn\" type=\"submit\" name=\"action\">Create!</a>\n            </div>\n    )\n}\n\nexport default CreatePost;","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/reducer/reducer.js",[],"/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/Profile/Profile.js",["73","74","75"],"import React, { useContext, useState, useEffect } from 'react'\nimport './Profile.css'\nimport { UserContext } from '../../App'\n\nfunction Profile() {\n  const { state, dispatch } = useContext(UserContext)\n  const [image, setImage] = useState('')\n  const [url, setURL] = useState('')\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    fetch('/myposts', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result.posts)\n        setData(result.posts)\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  useEffect(() => {\n    if (image) {\n      const data = new FormData()\n      data.append('file', image)\n      data.append('upload_preset', 'socio_circle')\n      data.append('cloud_name', 'danial92')\n      fetch('https://api.cloudinary.com/v1_1/danial92/image/upload', {\n        method: 'post',\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          fetch('/updatepic', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n            },\n            body: JSON.stringify({\n              pic: data.url,\n            }),\n          })\n            .then((res) => res.json())\n            .then((result) => {\n              console.log(result)\n              localStorage.setItem(\n                'user',\n                JSON.stringify({ ...state, pic: result.pic })\n              )\n              dispatch({ type: 'UPDATE_PIC', payload: result.pic })\n            })\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }, [image])\n\n  const updatePic = (file) => {\n    setImage(file)\n  }\n\n  return (\n    <>\n      <div className='profile'>\n        <div>\n          <img className='profile_image' src={state ? state.pic : ''} alt='' />\n        </div>\n          <div className='profile_info'>\n          <h2>{state ? state.name : 'Loading..!!!'}</h2>\n          <div className='followers_posts'>\n            <h5>Following {state ? state.following.length : '0'}</h5>\n            <h5>Followers {state ? state.followers.length : '0'}</h5>\n            <h5>Posts {data.length}</h5>\n          </div>\n          <div class='file-field input-field'>\n            <div class='btn'>\n              <span>Update Picture</span>\n              <input\n                type='file'\n                onChange={(e) => updatePic(e.target.files[0])}\n              />\n            </div>\n            <div class='file-path-wrapper'>\n              <input class='file-path validate' type='text' />\n            </div>\n          </div>\n          </div>\n        </div>\n        <hr />\n        <div className='gallery'>\n            <div className='media'>\n            {data.map((post) => {\n                return <img key={post._id} src={post.pic} alt={post._id.name} />\n            })}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Profile\n","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/OthersProfile/OthersProfile.js",["76"],"import React, { useState, useEffect, useContext } from 'react'\nimport '../Profile/Profile.css'\nimport { useParams } from 'react-router-dom'\nimport { UserContext } from '../../App'\n\nfunction OthersProfile() {\n  const [data, setData] = useState(null)\n  const { userid } = useParams()\n  const { state, dispatch } = useContext(UserContext)\n  const [followButton, setFollowButton] = useState(\n    state ? !state.following.includes(userid) ? true : false : <h2>Wait!</h2>\n  )\n  useEffect(() => {\n    fetch(`/user/${userid}`, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data)\n        console.log(data)\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  const followPost = () => {\n    fetch('/follow', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n      body: JSON.stringify({\n        followId: userid,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: 'UPDATE',\n          payload: { followers: data.followers, following: data.following },\n        })\n        localStorage.setItem('user', JSON.stringify(data))\n        setData((prevState) => {\n          return {\n            ...prevState,\n            user: {\n              ...prevState.user,\n              followers: [...prevState.user.followers, data._id],\n            },\n          }\n        })\n        setFollowButton(false)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const unfollowPost = () => {\n    fetch('/unfollow', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n      body: JSON.stringify({\n        unfollowId: userid,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: 'UPDATE',\n          payload: { followers: data.followers, following: data.following },\n        })\n        localStorage.setItem('user', JSON.stringify(data))\n\n        setData((prevState) => {\n          const unfollow = prevState.user.followers.filter(\n            (item) => item !== data._id\n          )\n          return {\n            ...prevState,\n            user: {\n              ...prevState.user,\n              followers: unfollow,\n            },\n          }\n        })\n        setFollowButton(true)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  return (\n    <>\n      {data ? (\n        <div>\n          <div className='profile'>\n            <div>\n              <img\n                className='profile_image'\n                src={data.user.pic}\n                alt=\"\"\n              />\n            </div>\n            <div className='profile_info'>\n              <h2>{data.user.name}</h2>\n              <div className='followers_posts'>\n                <h4>Following {data.user.following.length}</h4>\n                <h4>Followers {data.user.followers.length}</h4>\n                <h4>Posts {data.posts.length}</h4>\n              </div>\n              {followButton ? (\n                <button\n                  onClick={() => followPost()}\n                  className='btn waves-effect waves-light'\n                  type='submit'\n                  name='action'\n                >\n                  Follow\n                </button>\n              ) : (\n                <button\n                  onClick={() => unfollowPost()}\n                  className='btn waves-effect waves-light'\n                  type='submit'\n                  name='action'\n                >\n                  Unfollow\n                </button>\n              )}\n            </div>\n          </div>\n          <div className='gallery'>\n            <hr />\n            <div className='media'>\n              {data.posts.map((post) => {\n                return <img alt=\"\" src={post.pic} />\n              })}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h2>Loading..!!!</h2>\n      )}\n    </>\n  )\n}\n\nexport default OthersProfile\n","/Users/danialarshad92/Downloads/Programming/socio_circle/frontend/src/components/FollowingPosts/FollowingPosts.js",["77","78","79"],"import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../App'\nimport { Link } from 'react-router-dom'\nimport \"../Home/Home.css\";\n\n\nconst FollowingPosts = (props) => {\n  const { state, dispatch } = useContext(UserContext)\n  const [data, setData] = useState([])\n  console.log(data)\n  useEffect(() => {\n    fetch('/getfollowingpeopleposts', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setData(result.Posts)\n        console.log(result.Posts)\n      })\n  }, [])\n\n  const likePost = (id) => {\n    fetch('/like', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result)\n        const newData = data.map((item) => {\n          if (item._id == result._id) {\n            return result\n          } else {\n            return item\n          }\n        })\n        setData(newData)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const unlikePost = (id) => {\n    fetch('/unlike', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result)\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result \n          } else {\n            return item\n          }\n        })\n        setData(newData)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const commentPost = (text, postId) => {\n    fetch('/comment', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n      body: JSON.stringify({\n        text,\n        postId,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        //   console.log(result)\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result\n          } else {\n            return item\n          }\n        })\n        setData(newData)\n        console.log(result)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const deletePost = (postId) => {\n    fetch(`/deletepost/${postId}`, {\n      method: 'delete',\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.filter((item) => {\n          return item._id !== result._id // filter out the items(posts from our databases) whose id doesn't match with the id of user who is deleting the post; srf woh post jis pr user ne click kiya, woh delete kr do. Baqi sb database mein rehne do\n        })\n        setData(newData)\n      })\n  }\n\n  return (\n    <div className=\"cards_div\">\n      {data.length > 0 ? (\n        data.map((item) => {\n          return (\n            <div className='card post_card'>\n              <h3>\n                <Link\n                  to={\n                    item.postedBy._id !== state._id\n                      ? '/otherprofile/' + item.postedBy._id\n                      : '/profile'\n                  }\n                >\n                  {item.postedBy.name}\n                </Link>\n              </h3>\n              {item.postedBy._id == state._id ? (\n                <i\n                  class='material-icons'\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => deletePost(item._id)}\n                >\n                  delete\n                </i>\n              ) : null}\n              <img src={item.pic} alt='' />\n              <h6>{item.title}</h6>\n              <p>{item.body}</p>\n              <div className='like_div'>\n                {item.likes.includes(state._id) ? (\n                  <i\n                    class='material-icons'\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => {\n                      unlikePost(item._id)\n                    }}\n                  >\n                    thumb_down\n                  </i>\n                ) : (\n                  <i\n                    class='material-icons'\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => {\n                      likePost(item._id)\n                    }}\n                  >\n                    thumb_up\n                  </i>\n                )}\n              </div>\n              <p>{item.likes.length} likes</p>\n              <div className='comment_div'>\n                {item.comments.map((record) => {\n                  return (\n                    <p>\n                      <strong>{record.postedBy.name}</strong> {record.text}\n                    </p>\n                  )\n                })}\n              </div>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault()\n                  commentPost(e.target[0].value, item._id)\n                }}\n              >\n                <input type='text' placeholder='Add a comment...' />\n              </form>\n            </div>\n          )\n        })\n      ) : (\n        <h2>Please follow Someone to See Their Posts!</h2>\n      )}\n    </div>\n  )\n}\n\nexport default FollowingPosts\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":19,"column":11,"nodeType":"86","messageId":"87","endLine":19,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":7,"column":13,"nodeType":"86","messageId":"87","endLine":7,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":44,"column":17,"nodeType":"90","endLine":44,"endColumn":98},{"ruleId":"91","severity":1,"message":"92","line":18,"column":8,"nodeType":"93","endLine":18,"endColumn":13,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":41,"column":24,"nodeType":"97","messageId":"98","endLine":41,"endColumn":25,"suggestions":"99"},{"ruleId":"95","severity":1,"message":"96","line":41,"column":49,"nodeType":"97","messageId":"98","endLine":41,"endColumn":50,"suggestions":"100"},{"ruleId":"84","severity":1,"message":"101","line":8,"column":20,"nodeType":"86","messageId":"87","endLine":8,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":41,"column":34,"nodeType":"104","messageId":"105","endLine":41,"endColumn":36},{"ruleId":"102","severity":1,"message":"103","line":66,"column":34,"nodeType":"104","messageId":"105","endLine":66,"endColumn":36},{"ruleId":"84","severity":1,"message":"106","line":104,"column":11,"nodeType":"86","messageId":"87","endLine":104,"endColumn":21},{"ruleId":"102","severity":1,"message":"107","line":126,"column":57,"nodeType":"104","messageId":"105","endLine":126,"endColumn":59},{"ruleId":"91","severity":1,"message":"108","line":40,"column":8,"nodeType":"93","endLine":40,"endColumn":13,"suggestions":"109"},{"ruleId":"84","severity":1,"message":"110","line":8,"column":10,"nodeType":"86","messageId":"87","endLine":8,"endColumn":13},{"ruleId":"84","severity":1,"message":"111","line":8,"column":15,"nodeType":"86","messageId":"87","endLine":8,"endColumn":21},{"ruleId":"91","severity":1,"message":"112","line":61,"column":6,"nodeType":"93","endLine":61,"endColumn":13,"suggestions":"113"},{"ruleId":"91","severity":1,"message":"114","line":25,"column":6,"nodeType":"93","endLine":25,"endColumn":8,"suggestions":"115"},{"ruleId":"84","severity":1,"message":"101","line":8,"column":18,"nodeType":"86","messageId":"87","endLine":8,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":40,"column":24,"nodeType":"104","messageId":"105","endLine":40,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":138,"column":34,"nodeType":"104","messageId":"105","endLine":138,"endColumn":36},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.","ArrayExpression",["118"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["119","120"],["121","122"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'deletePost' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["123"],"'url' is assigned a value but never used.","'setURL' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["124"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"messageId":"128","fix":"129","desc":"130"},{"messageId":"131","fix":"132","desc":"133"},{"messageId":"128","fix":"134","desc":"130"},{"messageId":"131","fix":"135","desc":"133"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [uploadFields, url]",{"range":"142","text":"143"},"removeEscape",{"range":"144","text":"145"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"146","text":"147"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"148","text":"145"},{"range":"149","text":"147"},"Update the dependencies array to be: [URL, body, history, title]",{"range":"150","text":"151"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"152","text":"153"},"Update the dependencies array to be: [userid]",{"range":"154","text":"155"},[532,537],"[uploadFields, url]",[1300,1301],"",[1300,1300],"\\",[1325,1326],[1325,1325],[1287,1292],"[URL, body, history, title]",[1749,1756],"[dispatch, image, state]",[777,779],"[userid]"]